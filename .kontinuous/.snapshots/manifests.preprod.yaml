apiVersion: v1
kind: Namespace
metadata:
  annotations:
    field.cattle.io/projectId: c-gjtkk:p-qxn46
    kontinuous/gitBranch: master
    kontinuous/mainNamespace: 'true'
    kapp.k14s.io/exists: ''
    kontinuous/chartPath: project.fabrique.contrib.rancher-namespace
    kontinuous/source: >-
      project/charts/fabrique/charts/contrib/charts/rancher-namespace/templates/namespace.yaml
  labels:
    application: template
    cert: wildcard
    kontinuous/ref: master
    app.kubernetes.io/managed-by: kontinuous
    app.kubernetes.io/created-by: kontinuous
  name: template-preprod
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: netpol-ingress
  namespace: template-preprod
  annotations:
    kontinuous/chartPath: project.fabrique.contrib.security-policies
    kontinuous/source: >-
      project/charts/fabrique/charts/contrib/charts/security-policies/templates/network-policy.yml
    kapp.k14s.io/disable-original: ''
  labels:
    kontinuous/ref: master
    app.kubernetes.io/managed-by: kontinuous
    app.kubernetes.io/created-by: kontinuous
spec:
  ingress:
    - from:
        - podSelector: {}
    - from:
        - namespaceSelector:
            matchLabels:
              network-policy/source: ingress-controller
    - from:
        - namespaceSelector:
            matchLabels:
              network-policy/source: monitoring
  podSelector: {}
  policyTypes:
    - Ingress
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: default
  annotations:
    kontinuous/chartPath: project.fabrique.contrib.security-policies
    kontinuous/source: >-
      project/charts/fabrique/charts/contrib/charts/security-policies/templates/service-account.yaml
    kapp.k14s.io/disable-original: ''
  namespace: template-preprod
  labels:
    kontinuous/ref: master
    app.kubernetes.io/managed-by: kontinuous
    app.kubernetes.io/created-by: kontinuous
automountServiceAccountToken: false
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: app
  annotations:
    kontinuous/chartPath: project
    kontinuous/source: project/templates/app.configmap.yaml
    kapp.k14s.io/disable-original: ''
  namespace: template-preprod
  labels:
    kontinuous/ref: master
    app.kubernetes.io/managed-by: kontinuous
    app.kubernetes.io/created-by: kontinuous
data:
  NEXT_TELEMETRY_DISABLED: '1'
  KEYCLOAK_URL: >-
    https://keycloak-template-preprod.dev.fabrique.social.gouv.fr/realms/app-realm
  NEXTAUTH_URL: https://template-preprod.dev.fabrique.social.gouv.fr
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-realm
  annotations:
    kontinuous/chartPath: project
    kontinuous/source: project/templates/realm.configmap.yaml
    kapp.k14s.io/disable-original: ''
  namespace: template-preprod
  labels:
    kontinuous/ref: master
    app.kubernetes.io/managed-by: kontinuous
    app.kubernetes.io/created-by: kontinuous
data:
  realm.json.envtpl: |
    {
      "id": "app-realm",
      "realm": "app-realm",
      "notBefore": 0,
      "defaultSignatureAlgorithm": "RS256",
      "revokeRefreshToken": false,
      "refreshTokenMaxReuse": 0,
      "accessTokenLifespan": 300,
      "accessTokenLifespanForImplicitFlow": 900,
      "ssoSessionIdleTimeout": 1800,
      "ssoSessionMaxLifespan": 36000,
      "ssoSessionIdleTimeoutRememberMe": 0,
      "ssoSessionMaxLifespanRememberMe": 0,
      "offlineSessionIdleTimeout": 2592000,
      "offlineSessionMaxLifespanEnabled": false,
      "offlineSessionMaxLifespan": 5184000,
      "clientSessionIdleTimeout": 0,
      "clientSessionMaxLifespan": 0,
      "clientOfflineSessionIdleTimeout": 0,
      "clientOfflineSessionMaxLifespan": 0,
      "accessCodeLifespan": 60,
      "accessCodeLifespanUserAction": 300,
      "accessCodeLifespanLogin": 1800,
      "actionTokenGeneratedByAdminLifespan": 43200,
      "actionTokenGeneratedByUserLifespan": 300,
      "oauth2DeviceCodeLifespan": 600,
      "oauth2DevicePollingInterval": 5,
      "enabled": true,
      "sslRequired": "external",
      "registrationAllowed": true,
      "registrationEmailAsUsername": true,
      "rememberMe": true,
      "verifyEmail": false,
      "loginWithEmailAllowed": true,
      "duplicateEmailsAllowed": false,
      "resetPasswordAllowed": true,
      "editUsernameAllowed": true,
      "bruteForceProtected": true,
      "permanentLockout": false,
      "maxFailureWaitSeconds": 900,
      "minimumQuickLoginWaitSeconds": 60,
      "waitIncrementSeconds": 60,
      "quickLoginCheckMilliSeconds": 1000,
      "maxDeltaTimeSeconds": 43200,
      "failureFactor": 30,
      "roles": {
        "realm": [
          {
            "id": "69ca30b2-65d1-4150-aee6-141fbda034c1",
            "name": "offline_access",
            "description": "${role_offline-access}",
            "composite": false,
            "clientRole": false,
            "containerId": "app-realm",
            "attributes": {}
          },
          {
            "id": "eb95c41a-9dfd-46ee-928e-b894afce7cb2",
            "name": "uma_authorization",
            "description": "${role_uma_authorization}",
            "composite": false,
            "clientRole": false,
            "containerId": "app-realm",
            "attributes": {}
          },
          {
            "id": "320b2fce-7133-422c-a295-f83133ddce75",
            "name": "default-roles-app-realm",
            "description": "${role_default-roles}",
            "composite": true,
            "composites": {
              "realm": ["offline_access", "uma_authorization"],
              "client": {
                "account": ["manage-account", "view-profile"]
              }
            },
            "clientRole": false,
            "containerId": "app-realm",
            "attributes": {}
          }
        ],
        "client": {
          "realm-management": [
            {
              "id": "240846bf-bdd3-4c0f-b683-f56ad314a20b",
              "name": "view-authorization",
              "description": "${role_view-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "03866454-846d-4126-ab8b-4685b49f9c5a",
              "attributes": {}
            },
            {
              "id": "79a7cea2-bdd0-481f-b1c8-cb48c014dbf3",
              "name": "query-realms",
              "description": "${role_query-realms}",
              "composite": false,
              "clientRole": true,
              "containerId": "03866454-846d-4126-ab8b-4685b49f9c5a",
              "attributes": {}
            },
            {
              "id": "ef31c25b-e421-48dd-ba81-ee4916cca1bb",
              "name": "manage-identity-providers",
              "description": "${role_manage-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "03866454-846d-4126-ab8b-4685b49f9c5a",
              "attributes": {}
            },
            {
              "id": "888be148-f0b6-42fa-9b66-f36f0c6ac4c1",
              "name": "view-clients",
              "description": "${role_view-clients}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": ["query-clients"]
                }
              },
              "clientRole": true,
              "containerId": "03866454-846d-4126-ab8b-4685b49f9c5a",
              "attributes": {}
            },
            {
              "id": "a70e9eda-c368-4934-8ef6-7893aa9d46e4",
              "name": "manage-realm",
              "description": "${role_manage-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "03866454-846d-4126-ab8b-4685b49f9c5a",
              "attributes": {}
            },
            {
              "id": "7c6fe149-5249-4510-a98d-55243e8e6f3b",
              "name": "view-realm",
              "description": "${role_view-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "03866454-846d-4126-ab8b-4685b49f9c5a",
              "attributes": {}
            },
            {
              "id": "150c04ee-1f88-46a3-9f42-c2d0c859a1f0",
              "name": "manage-authorization",
              "description": "${role_manage-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "03866454-846d-4126-ab8b-4685b49f9c5a",
              "attributes": {}
            },
            {
              "id": "e7771d92-f573-4058-aed1-2671f57e877c",
              "name": "query-users",
              "description": "${role_query-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "03866454-846d-4126-ab8b-4685b49f9c5a",
              "attributes": {}
            },
            {
              "id": "8c2aaa20-28d2-401b-a0d8-1601b33dcf61",
              "name": "view-users",
              "description": "${role_view-users}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": ["query-groups", "query-users"]
                }
              },
              "clientRole": true,
              "containerId": "03866454-846d-4126-ab8b-4685b49f9c5a",
              "attributes": {}
            },
            {
              "id": "331c196f-8592-4446-bc94-ae1b239726f1",
              "name": "manage-events",
              "description": "${role_manage-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "03866454-846d-4126-ab8b-4685b49f9c5a",
              "attributes": {}
            },
            {
              "id": "51f8bf46-407c-476f-8fd6-60013d9c3b21",
              "name": "view-events",
              "description": "${role_view-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "03866454-846d-4126-ab8b-4685b49f9c5a",
              "attributes": {}
            },
            {
              "id": "2ecdfe9e-d8ed-4581-ab63-9a4f1bad8056",
              "name": "create-client",
              "description": "${role_create-client}",
              "composite": false,
              "clientRole": true,
              "containerId": "03866454-846d-4126-ab8b-4685b49f9c5a",
              "attributes": {}
            },
            {
              "id": "9a89fc6e-bd34-4293-b4dd-4950400a7f5f",
              "name": "query-groups",
              "description": "${role_query-groups}",
              "composite": false,
              "clientRole": true,
              "containerId": "03866454-846d-4126-ab8b-4685b49f9c5a",
              "attributes": {}
            },
            {
              "id": "b20b99e3-bc32-4265-a30f-e8f5f77c4ac5",
              "name": "view-identity-providers",
              "description": "${role_view-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "03866454-846d-4126-ab8b-4685b49f9c5a",
              "attributes": {}
            },
            {
              "id": "19753aed-4521-4143-888a-815ecde3da50",
              "name": "realm-admin",
              "description": "${role_realm-admin}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "view-authorization",
                    "query-realms",
                    "manage-identity-providers",
                    "view-clients",
                    "manage-realm",
                    "view-realm",
                    "manage-authorization",
                    "query-users",
                    "view-users",
                    "manage-events",
                    "view-events",
                    "create-client",
                    "query-groups",
                    "view-identity-providers",
                    "manage-users",
                    "query-clients",
                    "manage-clients",
                    "impersonation"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "03866454-846d-4126-ab8b-4685b49f9c5a",
              "attributes": {}
            },
            {
              "id": "b1894b09-8908-462a-9521-6c4e032406bb",
              "name": "manage-users",
              "description": "${role_manage-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "03866454-846d-4126-ab8b-4685b49f9c5a",
              "attributes": {}
            },
            {
              "id": "756be009-ece9-47ef-9a63-deb7ff2e5b32",
              "name": "query-clients",
              "description": "${role_query-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "03866454-846d-4126-ab8b-4685b49f9c5a",
              "attributes": {}
            },
            {
              "id": "e3cfd494-4795-4458-a6e4-191ea8bcbdc9",
              "name": "manage-clients",
              "description": "${role_manage-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "03866454-846d-4126-ab8b-4685b49f9c5a",
              "attributes": {}
            },
            {
              "id": "5e96bde4-5c0f-4c6b-ac6a-c35c7369fb56",
              "name": "impersonation",
              "description": "${role_impersonation}",
              "composite": false,
              "clientRole": true,
              "containerId": "03866454-846d-4126-ab8b-4685b49f9c5a",
              "attributes": {}
            }
          ],
          "app-client": [
            {
              "id": "c70b3d07-e3b5-4afe-bf3d-83ee61d1abe3",
              "name": "user",
              "composite": false,
              "clientRole": true,
              "containerId": "68a4be1f-06df-470f-88c9-3624f205f201",
              "attributes": {}
            }
          ],
          "security-admin-console": [],
          "admin-cli": [],
          "account-console": [],
          "broker": [
            {
              "id": "12a263a7-8244-4b57-a7d8-1dadeaf47e3b",
              "name": "read-token",
              "description": "${role_read-token}",
              "composite": false,
              "clientRole": true,
              "containerId": "ed799cda-87f5-4036-b03b-b58fd7162c61",
              "attributes": {}
            }
          ],
          "account": [
            {
              "id": "e32d6169-9999-4544-9c84-18751dd4557e",
              "name": "manage-consent",
              "description": "${role_manage-consent}",
              "composite": true,
              "composites": {
                "client": {
                  "account": ["view-consent"]
                }
              },
              "clientRole": true,
              "containerId": "6daccad8-0c0a-4b57-b835-fa5faf6217e5",
              "attributes": {}
            },
            {
              "id": "4240e837-a3a7-49a2-b488-28a6b3d13fc9",
              "name": "delete-account",
              "description": "${role_delete-account}",
              "composite": false,
              "clientRole": true,
              "containerId": "6daccad8-0c0a-4b57-b835-fa5faf6217e5",
              "attributes": {}
            },
            {
              "id": "ebb27698-b603-426a-96b9-1c14db092a30",
              "name": "view-consent",
              "description": "${role_view-consent}",
              "composite": false,
              "clientRole": true,
              "containerId": "6daccad8-0c0a-4b57-b835-fa5faf6217e5",
              "attributes": {}
            },
            {
              "id": "3f8723fc-4cfc-46bf-b3c5-f1d5579b1057",
              "name": "manage-account",
              "description": "${role_manage-account}",
              "composite": true,
              "composites": {
                "client": {
                  "account": ["manage-account-links"]
                }
              },
              "clientRole": true,
              "containerId": "6daccad8-0c0a-4b57-b835-fa5faf6217e5",
              "attributes": {}
            },
            {
              "id": "d36398d6-1e44-4a30-a938-1417a2d67dc4",
              "name": "view-applications",
              "description": "${role_view-applications}",
              "composite": false,
              "clientRole": true,
              "containerId": "6daccad8-0c0a-4b57-b835-fa5faf6217e5",
              "attributes": {}
            },
            {
              "id": "57131503-1484-4a02-b7f2-8762dcebc74f",
              "name": "manage-account-links",
              "description": "${role_manage-account-links}",
              "composite": false,
              "clientRole": true,
              "containerId": "6daccad8-0c0a-4b57-b835-fa5faf6217e5",
              "attributes": {}
            },
            {
              "id": "926fc739-9993-4ddb-9b05-c13a54695aea",
              "name": "view-profile",
              "description": "${role_view-profile}",
              "composite": false,
              "clientRole": true,
              "containerId": "6daccad8-0c0a-4b57-b835-fa5faf6217e5",
              "attributes": {}
            }
          ]
        }
      },
      "groups": [
        {
          "id": "06090eb4-a3be-41ff-88d2-a633fe60b7f7",
          "name": "users",
          "path": "/users",
          "attributes": {},
          "realmRoles": [],
          "clientRoles": {
            "app-client": ["user"]
          },
          "subGroups": []
        }
      ],
      "defaultRole": {
        "id": "320b2fce-7133-422c-a295-f83133ddce75",
        "name": "default-roles-app-realm",
        "description": "${role_default-roles}",
        "composite": true,
        "clientRole": false,
        "containerId": "app-realm"
      },
      "defaultGroups": ["/users"],
      "requiredCredentials": ["password"],
      "passwordPolicy": "length(12) and notUsername(undefined) and notEmail(undefined) and digits(1) and specialChars(1) and forceExpiredPasswordChange(365)",
      "otpPolicyType": "totp",
      "otpPolicyAlgorithm": "HmacSHA1",
      "otpPolicyInitialCounter": 0,
      "otpPolicyDigits": 6,
      "otpPolicyLookAheadWindow": 1,
      "otpPolicyPeriod": 30,
      "otpSupportedApplications": ["FreeOTP", "Google Authenticator"],
      "webAuthnPolicyRpEntityName": "keycloak",
      "webAuthnPolicySignatureAlgorithms": ["ES256"],
      "webAuthnPolicyRpId": "",
      "webAuthnPolicyAttestationConveyancePreference": "not specified",
      "webAuthnPolicyAuthenticatorAttachment": "not specified",
      "webAuthnPolicyRequireResidentKey": "not specified",
      "webAuthnPolicyUserVerificationRequirement": "not specified",
      "webAuthnPolicyCreateTimeout": 0,
      "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyAcceptableAaguids": [],
      "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
      "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256"],
      "webAuthnPolicyPasswordlessRpId": "",
      "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
      "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
      "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
      "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
      "webAuthnPolicyPasswordlessCreateTimeout": 0,
      "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyPasswordlessAcceptableAaguids": [],
      "users": [
        {
          "id": "8632b28f-b32d-4f40-9123-3391bfcc8a56",
          "createdTimestamp": 1652087242872,
          "username": "service-account-app-client",
          "enabled": true,
          "totp": false,
          "emailVerified": false,
          "serviceAccountClientId": "app-client",
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": ["default-roles-app-realm"],
          "notBefore": 0,
          "groups": []
        }
      ],
      "scopeMappings": [
        {
          "clientScope": "offline_access",
          "roles": ["offline_access"]
        }
      ],
      "clientScopeMappings": {
        "account": [
          {
            "client": "account-console",
            "roles": ["manage-account"]
          }
        ]
      },
      "clients": [
        {
          "id": "6daccad8-0c0a-4b57-b835-fa5faf6217e5",
          "clientId": "account",
          "name": "${client_account}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/app-realm/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": ["/realms/app-realm/account/*"],
          "webOrigins": ["${authBaseUrl}"],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {},
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "09f59fad-fa72-4a5a-ba3a-70b8492a5dff",
          "clientId": "account-console",
          "name": "${client_account-console}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/app-realm/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": ["/realms/app-realm/account/*"],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "f06c2857-b04a-4604-9dd4-487e71a140d7",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {}
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "d9760586-8015-4746-9ca5-5d65659e87a5",
          "clientId": "admin-cli",
          "name": "${client_admin-cli}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {},
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "68a4be1f-06df-470f-88c9-3624f205f201",
          "clientId": "app-client",
          "name": "",
          "description": "",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "{{ getenv `NEXTAUTH_URL` }}/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "{{ getenv `KEYCLOAK_CLIENT_SECRET` }}",
          "redirectUris": ["{{ getenv `NEXTAUTH_URL` }}/*"],
          "webOrigins": [""],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": true,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "saml.force.post.binding": "false",
            "saml.multivalued.roles": "false",
            "frontchannel.logout.session.required": "false",

            "oauth2.device.authorization.grant.enabled": "true",
            "use.jwks.url": "false",
            "backchannel.logout.revoke.offline.tokens": "false",
            "saml.server.signature.keyinfo.ext": "false",
            "use.refresh.tokens": "true",
            "oidc.ciba.grant.enabled": "false",
            "backchannel.logout.session.required": "false",
            "client_credentials.use_refresh_token": "false",
            "saml$server$signature$keyinfo$ext": "false",
            "require.pushed.authorization.requests": "false",
            "saml.client.signature": "false",
            "saml.allow.ecp.flow": "false",
            "id.token.as.detached.signature": "false",
            "saml.assertion.signature": "false",
            "client.secret.creation.time": "1652084534",
            "saml.encrypt": "false",
            "login_theme": "keycloak-dsfr",
            "saml$server$signature": "false",
            "saml.server.signature": "false",
            "exclude.session.state.from.auth.response": "false",
            "tls-client-certificate-bound-access-tokens": "false",
            "saml.artifact.binding": "false",
            "saml_force_name_id_format": "false",
            "acr.loa.map": "{}",
            "tls.client.certificate.bound.access.tokens": "false",
            "saml.authnstatement": "false",
            "display.on.consent.screen": "false",
            "token.response.type.bearer.lower-case": "false",
            "saml.onetimeuse.condition": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": -1,
          "protocolMappers": [
            {
              "id": "14861571-230e-45e8-809c-a214e48b8e2b",
              "name": "Client ID",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientId",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientId",
                "jsonType.label": "String"
              }
            },
            {
              "id": "e2dadcf2-67fd-4c91-b85c-8f47ad728f75",
              "name": "x-hasura-allowed-roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-client-role-mapper",
              "consentRequired": false,
              "config": {
                "multivalued": "true",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "https://hasura\\.io/jwt/claims.x-hasura-allowed-roles",
                "usermodel.clientRoleMapping.clientId": "app-client"
              }
            },
            {
              "id": "5cb2280a-f7c3-4d3c-9ae1-cf7f867bf194",
              "name": "x-hasura-default-role",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-hardcoded-claim-mapper",
              "consentRequired": false,
              "config": {
                "claim.value": "user",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "https://hasura\\.io/jwt/claims.x-hasura-default-role",
                "access.tokenResponse.claim": "false"
              }
            },
            {
              "id": "e28c58af-dc28-41e2-80e0-2bd63d3ba12d",
              "name": "Client IP Address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientAddress",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientAddress",
                "jsonType.label": "String"
              }
            },
            {
              "id": "fc9923bd-c3b7-49b1-98c7-9605b3bd2951",
              "name": "Client Host",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientHost",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientHost",
                "jsonType.label": "String"
              }
            },
            {
              "id": "b20473cc-7d44-43b4-a496-f779905b59b8",
              "name": "x-hasura-user-id",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "id",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "https://hasura\\.io/jwt/claims.x-hasura-user-id",
                "userinfo.token.claim": "true"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "ed799cda-87f5-4036-b03b-b58fd7162c61",
          "clientId": "broker",
          "name": "${client_broker}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": true,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {},
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "03866454-846d-4126-ab8b-4685b49f9c5a",
          "clientId": "realm-management",
          "name": "${client_realm-management}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": true,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {},
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "clientId": "security-admin-console",
          "name": "${client_security-admin-console}",
          "rootUrl": "${authAdminUrl}",
          "baseUrl": "/admin/app-realm/console/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": ["/admin/app-realm/console/*"],
          "webOrigins": ["+"],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "02457ef6-5741-4c46-bfee-c2f0eed6b52a",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        }
      ],
      "clientScopes": [
        {
          "id": "993e7b62-6229-46fa-8122-882d6574148c",
          "name": "email",
          "description": "OpenID Connect built-in scope: email",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${emailScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "a5d4046a-f3b2-4453-9d09-4093f32b3a61",
              "name": "email verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "emailVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email_verified",
                "jsonType.label": "boolean"
              }
            },
            {
              "id": "d350ed11-9689-4edf-addc-2b3101ed3dc8",
              "name": "email",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "email",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "829e0988-a78b-44c6-9841-e20464458eff",
          "name": "phone",
          "description": "OpenID Connect built-in scope: phone",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${phoneScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "72a53970-9a6b-45fa-ab4a-e822b3c51494",
              "name": "phone number",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumber",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number",
                "jsonType.label": "String"
              }
            },
            {
              "id": "422559f3-a8de-4a8e-a12c-c06578f383c6",
              "name": "phone number verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumberVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number_verified",
                "jsonType.label": "boolean"
              }
            }
          ]
        },
        {
          "id": "16388bbf-e020-47f8-9dda-55c80182e076",
          "name": "offline_access",
          "description": "OpenID Connect built-in scope: offline_access",
          "protocol": "openid-connect",
          "attributes": {
            "consent.screen.text": "${offlineAccessScopeConsentText}",
            "display.on.consent.screen": "true"
          }
        },
        {
          "id": "29671011-4905-47ac-b908-4a2a4330311b",
          "name": "web-origins",
          "description": "OpenID Connect scope for add allowed web origins to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false",
            "consent.screen.text": ""
          },
          "protocolMappers": [
            {
              "id": "12e40775-549e-4b3b-8134-50962b44ef04",
              "name": "allowed web origins",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-allowed-origins-mapper",
              "consentRequired": false,
              "config": {}
            }
          ]
        },
        {
          "id": "844bdd5c-a473-41f1-9215-16f93cd506af",
          "name": "profile",
          "description": "OpenID Connect built-in scope: profile",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${profileScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "be3256f9-16c8-4748-968c-759139e6c498",
              "name": "website",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "website",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "website",
                "jsonType.label": "String"
              }
            },
            {
              "id": "af100d54-da24-4873-9014-241d5016c94e",
              "name": "updated at",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "updatedAt",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "updated_at",
                "jsonType.label": "long"
              }
            },
            {
              "id": "7be2ce3d-ae12-4f9c-bb57-02354a67fee9",
              "name": "gender",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "gender",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "gender",
                "jsonType.label": "String"
              }
            },
            {
              "id": "edc57e15-1453-4f76-bc37-6e9529b124f7",
              "name": "zoneinfo",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "zoneinfo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "zoneinfo",
                "jsonType.label": "String"
              }
            },
            {
              "id": "f51f380a-e0ed-41c5-b0f0-6f7097c68c0b",
              "name": "full name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-full-name-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "8a598a3d-5782-4b92-9c48-8c9444b8fa16",
              "name": "profile",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "profile",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "profile",
                "jsonType.label": "String"
              }
            },
            {
              "id": "89b14094-e5c8-4737-9b3c-46dd5dbbb2f2",
              "name": "nickname",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "nickname",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "nickname",
                "jsonType.label": "String"
              }
            },
            {
              "id": "2a11c304-241f-40d4-a8da-59d735d01e0c",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            },
            {
              "id": "8bf7c54d-d864-4e38-b8e3-18343adae67a",
              "name": "username",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "preferred_username",
                "jsonType.label": "String"
              }
            },
            {
              "id": "c2a1884c-53b2-4306-99c9-afa4f89f47fc",
              "name": "given name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "firstName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "given_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "cb929373-6174-4f20-b57e-c53019f66c0e",
              "name": "picture",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "picture",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "picture",
                "jsonType.label": "String"
              }
            },
            {
              "id": "636c69ed-84ac-45a2-b9d7-147d4299bc47",
              "name": "birthdate",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "birthdate",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "birthdate",
                "jsonType.label": "String"
              }
            },
            {
              "id": "2163b9d8-0ba8-4a85-8b40-76159dae4d75",
              "name": "family name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "lastName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "family_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "30e328ac-9e81-44bf-8087-7a3ae46b86bd",
              "name": "middle name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "middleName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "middle_name",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "b6ff78fa-487b-4a6a-a033-ac8cb8e547cf",
          "name": "roles",
          "description": "OpenID Connect scope for add user roles to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${rolesScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "dab2a7dc-e619-4896-a3f0-1bec742f23ef",
              "name": "client roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-client-role-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "foo",
                "access.token.claim": "true",
                "claim.name": "resource_access.${client_id}.roles",
                "jsonType.label": "String",
                "multivalued": "true"
              }
            },
            {
              "id": "81c310ca-755c-4120-8893-71aa214c1ace",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {}
            },
            {
              "id": "10226444-2ac1-4233-8d86-b351f639d0c5",
              "name": "realm roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "foo",
                "access.token.claim": "true",
                "claim.name": "realm_access.roles",
                "jsonType.label": "String",
                "multivalued": "true"
              }
            }
          ]
        },
        {
          "id": "7bb640c4-7db0-4a3e-8ca2-a07b530758bb",
          "name": "microprofile-jwt",
          "description": "Microprofile - JWT built-in scope",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "7bcb9077-5cd1-4157-98fc-ba59f645f063",
              "name": "upn",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "upn",
                "jsonType.label": "String"
              }
            },
            {
              "id": "85c170a3-1066-4534-b189-663b40b23057",
              "name": "groups",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "multivalued": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "foo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "groups",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "f1c3966a-4910-489e-963b-b69738a6d984",
          "name": "acr",
          "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "1066caeb-f587-4b70-a865-9a7775f5cc26",
              "name": "acr loa level",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-acr-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "ea57d137-081a-4dec-9b85-c946d85c7b8c",
          "name": "role_list",
          "description": "SAML role list",
          "protocol": "saml",
          "attributes": {
            "consent.screen.text": "${samlRoleListScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "e91ecc51-0518-412c-aacd-14f74a037279",
              "name": "role list",
              "protocol": "saml",
              "protocolMapper": "saml-role-list-mapper",
              "consentRequired": false,
              "config": {
                "single": "false",
                "attribute.nameformat": "Basic",
                "attribute.name": "Role"
              }
            }
          ]
        },
        {
          "id": "49c1a546-bed5-4c48-a826-a3e942629d32",
          "name": "address",
          "description": "OpenID Connect built-in scope: address",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${addressScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "1aa230cb-9fdf-40ba-a1f9-52cdb0e0bd62",
              "name": "address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-address-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute.formatted": "formatted",
                "user.attribute.country": "country",
                "user.attribute.postal_code": "postal_code",
                "userinfo.token.claim": "true",
                "user.attribute.street": "street",
                "id.token.claim": "true",
                "user.attribute.region": "region",
                "access.token.claim": "true",
                "user.attribute.locality": "locality"
              }
            }
          ]
        }
      ],
      "defaultDefaultClientScopes": [
        "role_list",
        "profile",
        "email",
        "roles",
        "web-origins",
        "acr"
      ],
      "defaultOptionalClientScopes": [
        "offline_access",
        "address",
        "phone",
        "microprofile-jwt"
      ],
      "browserSecurityHeaders": {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection": "1; mode=block",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
      },
      "smtpServer": {
        "starttls": "{{ or (getenv `SMTP_STARTTLS`) `true` }}",
        "auth": "{{ or (getenv `SMTP_AUTH`) `true` }}",
        "host": "{{ getenv `SMTP_HOST` }}",
        "from": "{{ or (getenv `SMTP_FROM`) `` }}",
        "port": "{{ or (getenv `SMTP_PORT`) `587` }}",
        "ssl": "{{ or (getenv `SMTP_SSL`) `true` }}",
        "user": "{{ getenv `SMTP_USER` }}",
        "password": "{{ getenv `SMTP_PASSWORD` }}"
      },
      "loginTheme": "keycloak-dsfr",
      "eventsEnabled": true,
      "eventsExpiration": 86400,
      "eventsListeners": ["jboss-logging"],
      "enabledEventTypes": [],
      "adminEventsEnabled": true,
      "adminEventsDetailsEnabled": false,
      "identityProviders": [
        {
          "alias": "franceconnect-particulier",
          "internalId": "811dc141-3dbc-4f36-b434-e916b63cce84",
          "providerId": "franceconnect-particulier",
          "enabled": true,
          "updateProfileFirstLoginMode": "on",
          "trustEmail": false,
          "storeToken": false,
          "addReadTokenRoleOnCreate": false,
          "authenticateByDefault": false,
          "linkOnly": false,
          "firstBrokerLoginFlowAlias": "first broker login",
          "config": {
            "eidas_values": "eidas1",
            "isCreated": "true",
            "clientId": "{{ getenv `FRANCE_CONNECT_CLIENT_ID` }}",
            "fc_environment": "integration_v1",
            "syncMode": "IMPORT",
            "clientSecret": "{{ getenv `FRANCE_CONNECT_CLIENT_SECRET` }}",
            "defaultScope": "openid email",
            "useJwksUrl": "true"
          }
        }
      ],
      "identityProviderMappers": [
        {
          "id": "0ca78272-a9df-465c-850b-8ecec16cd6d9",
          "name": "firstName",
          "identityProviderAlias": "franceconnect-particulier",
          "identityProviderMapper": "franceconnect-user-attribute-mapper",
          "config": {
            "syncMode": "INHERIT",
            "claim": "given_name",
            "user.attribute": "firstName"
          }
        },
        {
          "id": "f783ffef-f4dd-4d56-b479-c3c9a98b9f3b",
          "name": "provider",
          "identityProviderAlias": "franceconnect-particulier",
          "identityProviderMapper": "hardcoded-attribute-idp-mapper",
          "config": {
            "attribute.value": "FC",
            "syncMode": "INHERIT",
            "attribute": "provider"
          }
        },
        {
          "id": "d30cfdd9-1d9b-42a3-903d-e1bb855cbfea",
          "name": "lastName",
          "identityProviderAlias": "franceconnect-particulier",
          "identityProviderMapper": "franceconnect-user-attribute-mapper",
          "config": {
            "syncMode": "INHERIT",
            "claim": "family_name",
            "user.attribute": "lastName"
          }
        },
        {
          "id": "7e991039-4081-468b-af85-42b3f840a7bc",
          "name": "email",
          "identityProviderAlias": "franceconnect-particulier",
          "identityProviderMapper": "franceconnect-user-attribute-mapper",
          "config": {
            "syncMode": "INHERIT",
            "claim": "email",
            "user.attribute": "email"
          }
        }
      ],
      "components": {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
          {
            "id": "d9fa6d0d-ca14-4ff5-a604-4224c0e6b5c3",
            "name": "Full Scope Disabled",
            "providerId": "scope",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          },
          {
            "id": "d155a354-0713-413e-9b6d-2cab023dda09",
            "name": "Trusted Hosts",
            "providerId": "trusted-hosts",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "host-sending-registration-request-must-match": ["true"],
              "client-uris-must-match": ["true"]
            }
          },
          {
            "id": "7e0fdbb8-cd10-42f2-a9cd-b0749c4d8f07",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allow-default-scopes": ["true"]
            }
          },
          {
            "id": "5b8508c1-1077-4a67-83d5-1931d7028ae1",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "oidc-usermodel-property-mapper",
                "oidc-full-name-mapper",
                "saml-role-list-mapper",
                "oidc-sha256-pairwise-sub-mapper",
                "saml-user-property-mapper",
                "oidc-address-mapper",
                "saml-user-attribute-mapper",
                "oidc-usermodel-attribute-mapper"
              ]
            }
          },
          {
            "id": "661574d5-9c7e-472d-b2e8-500358fd4202",
            "name": "Consent Required",
            "providerId": "consent-required",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          },
          {
            "id": "435264a5-7be1-4476-ac55-8c4e8cf2e2c2",
            "name": "Max Clients Limit",
            "providerId": "max-clients",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "max-clients": ["200"]
            }
          },
          {
            "id": "4e672291-b498-4bc6-841e-221ef10716b1",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "oidc-full-name-mapper",
                "oidc-sha256-pairwise-sub-mapper",
                "oidc-address-mapper",
                "saml-user-attribute-mapper",
                "oidc-usermodel-property-mapper",
                "oidc-usermodel-attribute-mapper",
                "saml-user-property-mapper",
                "saml-role-list-mapper"
              ]
            }
          },
          {
            "id": "01706ca3-d0a4-4e33-addc-77b47ef45ff6",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allow-default-scopes": ["true"]
            }
          }
        ],
        "org.keycloak.userprofile.UserProfileProvider": [
          {
            "id": "3a66433c-1fb9-480a-9266-f89370f9163b",
            "providerId": "declarative-user-profile",
            "subComponents": {},
            "config": {}
          }
        ],
        "org.keycloak.keys.KeyProvider": [
          {
            "id": "874258e0-a7b7-4f4d-bbc8-bff008034771",
            "name": "hmac-generated",
            "providerId": "hmac-generated",
            "subComponents": {},
            "config": {
              "priority": ["100"],
              "algorithm": ["HS256"]
            }
          },
          {
            "id": "194a1f68-7c81-4430-bda3-4df117acff81",
            "name": "aes-generated",
            "providerId": "aes-generated",
            "subComponents": {},
            "config": {
              "priority": ["100"]
            }
          },
          {
            "id": "32cf572a-a632-44f4-bd78-e7e74d5c6dff",
            "name": "rsa-enc-generated",
            "providerId": "rsa-enc-generated",
            "subComponents": {},
            "config": {
              "priority": ["100"],
              "algorithm": ["RSA-OAEP"]
            }
          },
          {
            "id": "e6793a0b-37b5-4ba7-afd6-b5efb592b281",
            "name": "rsa-generated",
            "providerId": "rsa-generated",
            "subComponents": {},
            "config": {
              "priority": ["100"]
            }
          }
        ]
      },
      "internationalizationEnabled": true,
      "supportedLocales": [
        "de",
        "no",
        "ru",
        "sv",
        "pt-BR",
        "lt",
        "en",
        "it",
        "fr",
        "hu",
        "zh-CN",
        "es",
        "cs",
        "ja",
        "sk",
        "pl",
        "da",
        "ca",
        "nl",
        "tr"
      ],
      "defaultLocale": "fr",
      "authenticationFlows": [
        {
          "id": "5788c762-6a75-4ce1-9cc2-a9d3c4c42e23",
          "alias": "Account verification options",
          "description": "Method with which to verity the existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-email-verification",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Verify Existing Account by Re-authentication",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "47d68373-246a-4258-8c42-cb99fa38660c",
          "alias": "Authentication Options",
          "description": "Authentication options.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "basic-auth",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "basic-auth-otp",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-spnego",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 30,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "d5dd647e-6248-4920-8144-5c0a393f4124",
          "alias": "Browser - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-otp-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "579db0e3-3e4c-4539-8153-e27c86f6458e",
          "alias": "Direct Grant - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "direct-grant-validate-otp",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "6dc63652-68dc-4dac-92c5-7ba8563bbef4",
          "alias": "First broker login - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-otp-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "672f2827-c6a9-4452-b481-76f70fed9f17",
          "alias": "Handle Existing Account",
          "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-confirm-link",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Account verification options",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "070ac444-ce04-45f9-ac9b-93c8fcde68ad",
          "alias": "Reset - Conditional OTP",
          "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-otp",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "9426d086-1ae4-4908-b974-c73eb8f2246e",
          "alias": "User creation or linking",
          "description": "Flow for the existing/non-existing user alternatives",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "create unique user config",
              "authenticator": "idp-create-user-if-unique",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Handle Existing Account",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "f7ed17f4-ae2b-4e5c-bb23-a7340072365f",
          "alias": "Verify Existing Account by Re-authentication",
          "description": "Reauthentication of existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "First broker login - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "32a7d0ef-b43f-4afb-83c4-a814b107ec52",
          "alias": "browser",
          "description": "browser based authentication",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-cookie",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-spnego",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "identity-provider-redirector",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 25,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "autheticatorFlow": true,
              "flowAlias": "forms",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "75c49c6a-bdd0-481d-a30f-c272dc2b03be",
          "alias": "clients",
          "description": "Base authentication for clients",
          "providerId": "client-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "client-secret",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-jwt",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-secret-jwt",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-x509",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 40,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "aa1995c2-66a8-4a35-86d0-0e9d0f919153",
          "alias": "direct grant",
          "description": "OpenID Connect Resource Owner Grant",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "direct-grant-validate-username",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "direct-grant-validate-password",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 30,
              "autheticatorFlow": true,
              "flowAlias": "Direct Grant - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "0f4a6c2b-4346-44a3-bff6-08f9b3c767d0",
          "alias": "docker auth",
          "description": "Used by Docker clients to authenticate against the IDP",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "docker-http-basic-authenticator",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "8a06cc72-ad9e-4148-992a-d89732677728",
          "alias": "first broker login",
          "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "review profile config",
              "authenticator": "idp-review-profile",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "User creation or linking",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "1ff9990e-2b61-4e31-ba83-7ae03e3944e6",
          "alias": "forms",
          "description": "Username, password, otp and other auth forms.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Browser - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "834385d0-3a53-483c-a464-9ac539cd15ad",
          "alias": "http challenge",
          "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "no-cookie-redirect",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Authentication Options",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "2565f2f5-3c21-4112-84ee-3116f94b9c48",
          "alias": "registration",
          "description": "registration flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-page-form",
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": true,
              "flowAlias": "registration form",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "22ceb63f-ad33-4969-b40b-8294d00a2b56",
          "alias": "registration form",
          "description": "registration form",
          "providerId": "form-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-user-creation",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-profile-action",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 40,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-password-action",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 50,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-recaptcha-action",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 60,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "3565f372-179e-4014-b10d-a73fb2d986f9",
          "alias": "reset credentials",
          "description": "Reset credentials for a user if they forgot their password or something",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "reset-credentials-choose-user",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-credential-email",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-password",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 30,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 40,
              "autheticatorFlow": true,
              "flowAlias": "Reset - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "ea9e1b4d-b747-4038-93c8-b2e8d01679ec",
          "alias": "saml ecp",
          "description": "SAML ECP Profile Authentication Flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "http-basic-authenticator",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        }
      ],
      "authenticatorConfig": [
        {
          "id": "6314f457-4c4e-4b2d-84e1-c1936a7a0ffa",
          "alias": "create unique user config",
          "config": {
            "require.password.update.after.registration": "false"
          }
        },
        {
          "id": "a38efc15-69ed-44ba-b87b-23a3baffb72d",
          "alias": "review profile config",
          "config": {
            "update.profile.on.first.login": "missing"
          }
        }
      ],
      "requiredActions": [
        {
          "alias": "CONFIGURE_TOTP",
          "name": "Configure OTP",
          "providerId": "CONFIGURE_TOTP",
          "enabled": true,
          "defaultAction": false,
          "priority": 10,
          "config": {}
        },
        {
          "alias": "terms_and_conditions",
          "name": "Terms and Conditions",
          "providerId": "terms_and_conditions",
          "enabled": false,
          "defaultAction": false,
          "priority": 20,
          "config": {}
        },
        {
          "alias": "UPDATE_PASSWORD",
          "name": "Update Password",
          "providerId": "UPDATE_PASSWORD",
          "enabled": true,
          "defaultAction": false,
          "priority": 30,
          "config": {}
        },
        {
          "alias": "UPDATE_PROFILE",
          "name": "Update Profile",
          "providerId": "UPDATE_PROFILE",
          "enabled": true,
          "defaultAction": false,
          "priority": 40,
          "config": {}
        },
        {
          "alias": "VERIFY_EMAIL",
          "name": "Verify Email",
          "providerId": "VERIFY_EMAIL",
          "enabled": true,
          "defaultAction": false,
          "priority": 50,
          "config": {}
        },
        {
          "alias": "delete_account",
          "name": "Delete Account",
          "providerId": "delete_account",
          "enabled": false,
          "defaultAction": false,
          "priority": 60,
          "config": {}
        },
        {
          "alias": "update_user_locale",
          "name": "Update User Locale",
          "providerId": "update_user_locale",
          "enabled": true,
          "defaultAction": false,
          "priority": 1000,
          "config": {}
        }
      ],
      "browserFlow": "browser",
      "registrationFlow": "registration",
      "directGrantFlow": "direct grant",
      "resetCredentialsFlow": "reset credentials",
      "clientAuthenticationFlow": "clients",
      "dockerAuthenticationFlow": "docker auth",
      "attributes": {
        "cibaBackchannelTokenDeliveryMode": "poll",
        "cibaExpiresIn": "120",
        "cibaAuthRequestedUserHint": "login_hint",
        "oauth2DeviceCodeLifespan": "600",
        "clientOfflineSessionMaxLifespan": "0",
        "oauth2DevicePollingInterval": "5",
        "clientSessionIdleTimeout": "0",
        "userProfileEnabled": "false",
        "parRequestUriLifespan": "60",
        "clientSessionMaxLifespan": "0",
        "clientOfflineSessionIdleTimeout": "0",
        "cibaInterval": "5"
      },
      "keycloakVersion": "19.0.0",
      "userManagedAccessAllowed": true,
      "clientProfiles": {
        "profiles": []
      },
      "clientPolicies": {
        "policies": []
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  labels:
    component: app
    application: template
    kontinuous/ref: master
    app.kubernetes.io/managed-by: kontinuous
    app.kubernetes.io/created-by: kontinuous
  name: app
  namespace: template-preprod
  annotations:
    kontinuous/chartPath: project.fabrique.contrib.app
    kontinuous/source: project/charts/fabrique/charts/contrib/charts/app/templates/service.yaml
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/disable-default-ownership-label-rules: ''
    kapp.k14s.io/disable-default-label-scoping-rules: ''
spec:
  ports:
    - name: http
      port: 80
      targetPort: 3000
  selector:
    component: app
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    component: hasura
    application: template
    kontinuous/ref: master
    app.kubernetes.io/managed-by: kontinuous
    app.kubernetes.io/created-by: kontinuous
  name: hasura
  namespace: template-preprod
  annotations:
    kontinuous/chartPath: project.fabrique.contrib.hasura
    kontinuous/source: >-
      project/charts/fabrique/charts/contrib/charts/hasura/templates/service.yaml
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/disable-default-ownership-label-rules: ''
    kapp.k14s.io/disable-default-label-scoping-rules: ''
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    component: hasura
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: keycloakx-headless
  labels:
    helm.sh/chart: keycloakx-1.3.2
    app.kubernetes.io/name: keycloakx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 19.0.0
    app.kubernetes.io/managed-by: kontinuous
    app.kubernetes.io/component: headless
    kontinuous/ref: master
    app.kubernetes.io/created-by: kontinuous
  annotations:
    kontinuous/chartPath: project.fabrique.keycloakx
    kontinuous/source: project/charts/fabrique/charts/keycloakx/templates/service-headless.yaml
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/disable-default-ownership-label-rules: ''
    kapp.k14s.io/disable-default-label-scoping-rules: ''
  namespace: template-preprod
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http
      port: 8080
      targetPort: http
      protocol: TCP
  selector:
    app.kubernetes.io/name: keycloakx
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: keycloakx-http
  labels:
    helm.sh/chart: keycloakx-1.3.2
    app.kubernetes.io/name: keycloakx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 19.0.0
    app.kubernetes.io/managed-by: kontinuous
    app.kubernetes.io/component: http
    kontinuous/ref: master
    app.kubernetes.io/created-by: kontinuous
  annotations:
    kontinuous/chartPath: project.fabrique.keycloakx
    kontinuous/source: project/charts/fabrique/charts/keycloakx/templates/service-http.yaml
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/disable-default-ownership-label-rules: ''
    kapp.k14s.io/disable-default-label-scoping-rules: ''
  namespace: template-preprod
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      targetPort: http
      protocol: TCP
    - name: https
      port: 8443
      targetPort: https
      protocol: TCP
  selector:
    app.kubernetes.io/name: keycloakx
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: app
    application: template
    kontinuous/ref: master
    app.kubernetes.io/managed-by: kontinuous
    app.kubernetes.io/created-by: kontinuous
  name: app
  namespace: template-preprod
  annotations:
    kontinuous/chartPath: project.fabrique.contrib.app
    kontinuous/source: >-
      project/charts/fabrique/charts/contrib/charts/app/templates/deployment.yaml
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/create-strategy: fallback-on-update
    kapp.k14s.io/update-strategy: fallback-on-replace
    kapp.k14s.io/nonce: ''
    kapp.k14s.io/change-group: kontinuous/template-preprod
    kapp.k14s.io/change-group.app: kontinuous/app.template-preprod
    kapp.k14s.io/change-rule.build-app: upsert after upserting kontinuous/build-app.template-preprod
    kapp.k14s.io/change-rule.keycloakx: upsert after upserting kontinuous/keycloakx.template-preprod
    kapp.k14s.io/change-rule.hasura: upsert after upserting kontinuous/hasura.template-preprod
spec:
  replicas: 1
  selector:
    matchLabels:
      component: app
  template:
    metadata:
      labels:
        component: app
        application: template
        namespace: template-preprod
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: namespace
                    operator: In
                    values:
                      - template-preprod
                  - key: component
                    operator: In
                    values:
                      - app
              topologyKey: kubernetes.io/hostname
      containers:
        - image: >-
            harbor.fabrique.social.gouv.fr/fabrique/template/app:preprod-0000000000000000000000000000000000000000
          livenessProbe:
            failureThreshold: 15
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 5
          name: app
          ports:
            - containerPort: 3000
              name: http
          readinessProbe:
            failureThreshold: 15
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 1
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          startupProbe:
            httpGet:
              path: /healthz
              port: http
            failureThreshold: 12
            periodSeconds: 5
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          envFrom:
            - configMapRef:
                name: app
            - secretRef:
                name: app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: hasura
    application: template
    kontinuous/ref: master
    app.kubernetes.io/managed-by: kontinuous
    app.kubernetes.io/created-by: kontinuous
  name: hasura
  namespace: template-preprod
  annotations:
    kontinuous/chartPath: project.fabrique.contrib.hasura
    kontinuous/source: >-
      project/charts/fabrique/charts/contrib/charts/hasura/templates/deployment.yaml
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/create-strategy: fallback-on-update
    kapp.k14s.io/update-strategy: fallback-on-replace
    kapp.k14s.io/nonce: ''
    kapp.k14s.io/change-group: kontinuous/template-preprod
    kapp.k14s.io/change-group.hasura: kontinuous/hasura.template-preprod
    kapp.k14s.io/change-rule.build-hasura: upsert after upserting kontinuous/build-hasura.template-preprod
    kapp.k14s.io/change-rule.keycloakx: upsert after upserting kontinuous/keycloakx.template-preprod
spec:
  replicas: 1
  selector:
    matchLabels:
      component: hasura
  template:
    metadata:
      labels:
        component: hasura
        application: template
    spec:
      containers:
        - image: >-
            harbor.fabrique.social.gouv.fr/fabrique/template/hasura:preprod-0000000000000000000000000000000000000000
          livenessProbe:
            failureThreshold: 15
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 5
          name: hasura
          ports:
            - containerPort: 8080
              name: http
          readinessProbe:
            failureThreshold: 15
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 1280Mi
            requests:
              cpu: 50m
              memory: 128Mi
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz
              port: http
            periodSeconds: 5
          env:
            - name: HASURA_GRAPHQL_ENABLE_CONSOLE
              value: 'false'
            - name: HASURA_GRAPHQL_DEV_MODE
              value: 'true'
            - name: HASURA_GRAPHQL_UNAUTHORIZED_ROLE
              value: anonymous
            - name: HASURA_GRAPHQL_JWT_SECRET
              value: >-
                {"jwk_url":
                "http://keycloakx-http:8080/realms/app-realm/protocol/openid-connect/certs"}
          envFrom:
            - secretRef:
                name: pg-user-hasura
            - secretRef:
                name: hasura
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloakx
  labels:
    helm.sh/chart: keycloakx-1.3.2
    app.kubernetes.io/name: keycloakx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 19.0.0
    app.kubernetes.io/managed-by: kontinuous
    kontinuous/ref: master
    app.kubernetes.io/created-by: kontinuous
  annotations:
    kontinuous/chartPath: project.fabrique.keycloakx
    kontinuous/source: project/charts/fabrique/charts/keycloakx/templates/statefulset.yaml
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/change-group: kontinuous/template-preprod
    kapp.k14s.io/change-group.keycloakx: kontinuous/keycloakx.template-preprod
  namespace: template-preprod
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloakx
      app.kubernetes.io/instance: release-name
  replicas: 1
  serviceName: keycloakx-headless
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config-startup: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        checksum/secrets: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
      labels:
        app.kubernetes.io/name: keycloakx
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
        - name: compile-realm
          image: hairyhenderson/gomplate:v3.10.0-alpine
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: keycloak-realm-tpl
              mountPath: /realm-tpl/
              readOnly: true
            - name: keycloak-realm
              mountPath: /realm/
          envFrom:
            - configMapRef:
                name: app
            - secretRef:
                name: app
            - secretRef:
                name: franceconnect
            - secretRef:
                name: smtp
          command:
            - sh
          args:
            - '-c'
            - cat /realm-tpl/realm.json.envtpl | gomplate > /realm/realm.json
        - name: fetch-keycloak-providers
          image: curlimages/curl
          imagePullPolicy: IfNotPresent
          command:
            - sh
          args:
            - '-c'
            - >-
              curl -L -f -S -o /providers/keycloak-dsfr-latest.jar
              https://github.com/SocialGouv/keycloak-dsfr/releases/latest/download/keycloak-theme.jar
              -o /providers/keycloak-franceconnect-4.1.0.jar
              https://github.com/InseeFr/Keycloak-FranceConnect/releases/download/4.1.0/keycloak-franceconnect-4.1.0.jar
          volumeMounts:
            - name: providers
              mountPath: /providers
      containers:
        - name: keycloak
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
          image: quay.io/keycloak/keycloak:19.0.0
          imagePullPolicy: IfNotPresent
          command:
            - /opt/keycloak/bin/kc.sh
            - start
            - '--http-enabled=true'
            - '--http-port=8080'
            - '--hostname-strict=true'
            - '--hostname-strict-https=true'
            - '--log-level=debug'
            - '--import-realm'
          args: []
          env:
            - name: KC_HTTP_RELATIVE_PATH
              value: /
            - name: KC_PROXY
              value: edge
            - name: KC_DB
              value: postgres
            - name: KC_METRICS_ENABLED
              value: 'true'
            - name: KC_DB_URL_HOST
              value: $(PGHOST)
            - name: KC_DB_URL_PORT
              value: $(PGPORT)
            - name: KC_DB_URL_DATABASE
              value: $(PGDATABASE)
            - name: KC_DB_USERNAME
              value: $(PGUSER)
            - name: KC_DB_PASSWORD
              value: $(PGPASSWORD)
            - name: KC_HOSTNAME
              value: keycloak-template-preprod.dev.fabrique.social.gouv.fr
            - name: KC_LOG_LEVEL
              value: INFO
          envFrom:
            - secretRef:
                name: pg-user-keycloak
            - secretRef:
                name: keycloak-secrets
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 0
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /realms/master
              port: http
            initialDelaySeconds: 10
            timeoutSeconds: 1
          startupProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 15
            timeoutSeconds: 1
            failureThreshold: 60
            periodSeconds: 5
          resources: {}
          volumeMounts:
            - name: keycloak-realm
              mountPath: /opt/keycloak/data/import
              readOnly: true
            - name: providers
              mountPath: /opt/keycloak/providers
      serviceAccountName: default
      securityContext:
        fsGroup: 1000
      enableServiceLinks: true
      restartPolicy: Always
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: keycloakx
                  app.kubernetes.io/instance: release-name
                matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: NotIn
                    values:
                      - test
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: keycloakx
                    app.kubernetes.io/instance: release-name
                  matchExpressions:
                    - key: app.kubernetes.io/component
                      operator: NotIn
                      values:
                        - test
                topologyKey: topology.kubernetes.io/zone
      terminationGracePeriodSeconds: 60
      volumes:
        - name: keycloak-realm-tpl
          configMap:
            name: keycloak-realm
        - name: keycloak-realm
          emptyDir: {}
        - name: providers
          emptyDir: {}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: job-template-master-build-app-kaniko-3zekn9
  namespace: fabrique-ci
  annotations:
    kapp.k14s.io/nonce: ''
    kapp.k14s.io/update-strategy: fallback-on-replace
    kapp.k14s.io/change-group: kontinuous/template-preprod
    kapp.k14s.io/change-group.build-app: kontinuous/build-app.template-preprod
    kapp.k14s.io/change-group.build-app.kaniko: kontinuous/build-app.kaniko.template-preprod
    kapp.k14s.io/change-group.build-app..kaniko: kontinuous/build-app..kaniko.template-preprod
    janitor/ttl: '1800'
    kontinuous/chartPath: project.fabrique.contrib.jobs
    kontinuous/source: project/charts/fabrique/charts/contrib/charts/jobs/templates/jobs.yaml
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/create-strategy: fallback-on-update
    kapp.k14s.io/change-group.jobs: kontinuous/jobs.template-preprod
  labels:
    kontinuous/ref: master
    app.kubernetes.io/managed-by: kontinuous
    app.kubernetes.io/created-by: kontinuous
spec:
  backoffLimit: 1
  activeDeadlineSeconds: 3600
  ttlSecondsAfterFinished: 1800
  template:
    metadata:
      labels:
        environment: preprod
        ref: master
        repository: template
        runName: build
    spec:
      restartPolicy: Never
      initContainers:
        - name: degit-repository
          image: harbor.fabrique.social.gouv.fr/sre/kontinuous/degit:v1
          command:
            - sh
            - '-c'
            - |
              degit SocialGouv/template#master \
                /workspace
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          volumeMounts:
            - name: workspace
              mountPath: /workspace
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 64Mi
      containers:
        - name: job
          image: gcr.io/kaniko-project/executor:debug
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: harbor
          command:
            - /busybox/sh
            - '-c'
            - >
              set -e

              mkdir -p /kaniko/.docker

              echo
              "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}"
              > /kaniko/.docker/config.json

              export IMAGE_PATH=$CI_REGISTRY/fabrique/template/app

              /kaniko/executor \
                --context=dir:///workspace \
                --dockerfile=/workspace/Dockerfile \
                --destination=$IMAGE_PATH:preprod-0000000000000000000000000000000000000000 \
                --destination=$IMAGE_PATH:master \
                --cache=true \
                --cache-repo=$IMAGE_PATH \
                --snapshotMode=redo \
                --skip-unused-stages \
                --use-new-run \
                --cache-ttl=336h \
                --build-arg="NEXT_PUBLIC_APP_VERSION_COMMIT=0000000000000000000000000000000000000000" \
                --build-arg="NEXT_PUBLIC_HASURA_GRAPHQL_ENDPOINT_URL=https://hasura-template-preprod.dev.fabrique.social.gouv.fr/v1/graphql" \
                
          resources:
            limits:
              cpu: 2
              memory: 10Gi
            requests:
              cpu: 500m
              memory: 4Gi
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            fsGroup: 0
          volumeMounts:
            - name: workspace
              mountPath: /workspace
            - name: action
              mountPath: /action
      volumes:
        - name: workspace
          emptyDir: {}
        - name: action
          emptyDir: {}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: job-template-master-build-hasura-kaniko-3d6853
  namespace: fabrique-ci
  annotations:
    kapp.k14s.io/nonce: ''
    kapp.k14s.io/update-strategy: fallback-on-replace
    kapp.k14s.io/change-group: kontinuous/template-preprod
    kapp.k14s.io/change-group.build-hasura: kontinuous/build-hasura.template-preprod
    kapp.k14s.io/change-group.build-hasura.kaniko: kontinuous/build-hasura.kaniko.template-preprod
    kapp.k14s.io/change-group.build-hasura..kaniko: kontinuous/build-hasura..kaniko.template-preprod
    janitor/ttl: '1800'
    kontinuous/chartPath: project.fabrique.contrib.jobs
    kontinuous/source: project/charts/fabrique/charts/contrib/charts/jobs/templates/jobs.yaml
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/create-strategy: fallback-on-update
    kapp.k14s.io/change-group.jobs: kontinuous/jobs.template-preprod
  labels:
    kontinuous/ref: master
    app.kubernetes.io/managed-by: kontinuous
    app.kubernetes.io/created-by: kontinuous
spec:
  backoffLimit: 1
  activeDeadlineSeconds: 3600
  ttlSecondsAfterFinished: 1800
  template:
    metadata:
      labels:
        environment: preprod
        ref: master
        repository: template
        runName: build
    spec:
      restartPolicy: Never
      initContainers:
        - name: degit-repository
          image: harbor.fabrique.social.gouv.fr/sre/kontinuous/degit:v1
          command:
            - sh
            - '-c'
            - |
              degit SocialGouv/template#master \
                /workspace
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          volumeMounts:
            - name: workspace
              mountPath: /workspace
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 64Mi
      containers:
        - name: job
          image: gcr.io/kaniko-project/executor:debug
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: harbor
          command:
            - /busybox/sh
            - '-c'
            - >
              set -e

              mkdir -p /kaniko/.docker

              echo
              "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}"
              > /kaniko/.docker/config.json

              export IMAGE_PATH=$CI_REGISTRY/fabrique/template/hasura

              /kaniko/executor \
                --context=dir:///workspace/./hasura \
                --dockerfile=/workspace/./hasura/Dockerfile \
                --destination=$IMAGE_PATH:preprod-0000000000000000000000000000000000000000 \
                --destination=$IMAGE_PATH:master \
                --cache=true \
                --cache-repo=$IMAGE_PATH \
                --snapshotMode=redo \
                --skip-unused-stages \
                --use-new-run \
                --cache-ttl=336h \
                
          resources:
            limits:
              cpu: 2
              memory: 4Gi
            requests:
              cpu: 500m
              memory: 1Gi
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            fsGroup: 0
          volumeMounts:
            - name: workspace
              mountPath: /workspace
            - name: action
              mountPath: /action
      volumes:
        - name: workspace
          emptyDir: {}
        - name: action
          emptyDir: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-buffer-size: 128k
    kontinuous/chartPath: project.fabrique.contrib.app
    kontinuous/source: project/charts/fabrique/charts/contrib/charts/app/templates/ingress.yaml
    kapp.k14s.io/disable-original: ''
  labels:
    component: app
    application: template
    kontinuous/ref: master
    app.kubernetes.io/managed-by: kontinuous
    app.kubernetes.io/created-by: kontinuous
  name: app
  namespace: template-preprod
spec:
  rules:
    - host: template-preprod.dev.fabrique.social.gouv.fr
      http:
        paths:
          - backend:
              service:
                name: app
                port:
                  name: http
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - template-preprod.dev.fabrique.social.gouv.fr
      secretName: wildcard-crt
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    kontinuous/chartPath: project.fabrique.contrib.hasura
    kontinuous/source: >-
      project/charts/fabrique/charts/contrib/charts/hasura/templates/ingress.yaml
    kapp.k14s.io/disable-original: ''
  labels:
    component: hasura
    application: template
    kontinuous/ref: master
    app.kubernetes.io/managed-by: kontinuous
    app.kubernetes.io/created-by: kontinuous
  name: hasura
  namespace: template-preprod
spec:
  rules:
    - host: hasura-template-preprod.dev.fabrique.social.gouv.fr
      http:
        paths:
          - backend:
              service:
                name: hasura
                port:
                  name: http
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - hasura-template-preprod.dev.fabrique.social.gouv.fr
      secretName: wildcard-crt
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keycloakx
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-buffer-size: 128k
    kontinuous/chartPath: project.fabrique.keycloakx
    kontinuous/source: project/charts/fabrique/charts/keycloakx/templates/ingress.yaml
    kapp.k14s.io/disable-original: ''
  labels:
    helm.sh/chart: keycloakx-1.3.2
    app.kubernetes.io/name: keycloakx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 19.0.0
    app.kubernetes.io/managed-by: kontinuous
    kontinuous/ref: master
    app.kubernetes.io/created-by: kontinuous
  namespace: template-preprod
spec:
  tls:
    - hosts:
        - keycloak-template-preprod.dev.fabrique.social.gouv.fr
      secretName: wildcard-crt
  rules:
    - host: keycloak-template-preprod.dev.fabrique.social.gouv.fr
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: keycloakx-http
                port:
                  name: http
---
apiVersion: kapp.k14s.io/v1alpha1
kind: Config
rebaseRules:
  - path:
      - metadata
      - annotations
      - field.cattle.io/publicEndpoints
    type: copy
    sources:
      - existing
      - new
    resourceMatchers:
      - apiVersionKindMatcher:
          apiVersion: apps/v1
          kind: Deployment
metadata:
  annotations:
    kontinuous/chartPath: project.fabrique.contrib.rancher-namespace
    kontinuous/source: >-
      project/charts/fabrique/charts/contrib/charts/rancher-namespace/templates/config.kapp.yaml
  labels:
    kontinuous/ref: master
    app.kubernetes.io/managed-by: kontinuous
    app.kubernetes.io/created-by: kontinuous
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: 'true'
    kontinuous/chartPath: project
    kontinuous/source: project/templates/app.sealed.secret.yaml
    kapp.k14s.io/disable-original: ''
  name: app
  namespace: template-preprod
  labels:
    kontinuous/ref: master
    app.kubernetes.io/managed-by: kontinuous
    app.kubernetes.io/created-by: kontinuous
spec:
  encryptedData:
    NEXTAUTH_SECRET: >-
      AgBdDOpKTwHKWU2g0+hGyGZpP0LC6f3sEtw1ejLkk72Rhip/Soia+/4gKzXHb938u0YE1FQsz8tntM2/mmCv6+hmtgvsE+aaNWEBqTMkOby/bbChrxhw50es06cWBK7ts0m6NGNvyNfdEWHWWrOTDmO7m/4f0oS9KAaXjeFdNlOEU8kq7Fe5W5/hdNpH7u8MF7MwWwGrQyO9QHHNp3Ojyc5i/PIEBjE4VgxnLlX/B3i+sPjymIQhI8bsd9HXwvqM3V8TK/AI5JceYodz7UkBlPipgS4Bg2ldmK8xgXkYuRrehh+sTo8faiuMwVAYmdFYJYRwhMMg04IZ4yGsHu0NxmFuVAUvQL+5ksoDoJTGjWxrwR4+LT7NiGPRma65ARpFD0iDj/n+pKODkXA/ol+2p9I4gEHzWVwECIEjKMXVuOGAfHVjklZWj6+qYY74w9yF/P+QsWsK68p2igjFb1RfXszeujAQyF25vhNB5MXCFkeuLaEyU1yNFULc6vyc0HJO1Y/8zNWXmqqDSUMlc/mGrO/TojkMKwDrfbMhIhegW0JcgcHJSpPnXpReYKp77PH8ElavbqmjVN1SXXlA1kCHX9QzERHvoIMzJFXCryOSXIVq3LkYiNeKCNJKEHpIB9exuOdwqJXBb/lnPponkZOh4JpyGgjARc6HoQsGr0mzpYkIIRYny/tSvW6vrIT1Yak+VWcNTlw+1+nu7av1dax7HDVkZ3AnepD6zsHSEnoNp0zy7ZkZPJZtN7E8vEEf8Q==
    KEYCLOAK_CLIENT_ID: >-
      AgB8KATkspkNplsty+H4bBjm7Ce4pxmy3/s0h0KFnO69dFj5Xwy36nJ5H7g4oTE8xQBDEPWX/YyF5/rqFGTeN5Btybk3yRRQoS+j5OyMruUOdvwthN2RQlma6IMeHp65UwIFuOrYn44w4kZBYbXM9teinH3qI/IvLs+8s5D3NxbD6TYTPcUVOxfiuI21atN35qgVCrMtWBy7w1VjcA9Trjwv3nc0fOUkKWZNNmc7S5zh/UneJJC0Wlf96x1OkYNbSm1GB6H5T80ayPDB1d5nT2598Hz1BFhsxbsqfoABQYcQIOULggMkQaAGHkgGk4lCF4U83b4m3lIb7il6W7UmANMW4ZdFUsftA3o37WUq2rfasIjHLrZuNka97SkU9ZJKm4axb5bNRz+xCxwv6FaWQTfvrI/qYUAsuFpgMPRphEyxngOoHLqyrBa2fN+ahNYyniIXBp2TmUhzfjybXt56QWwNUEDeMGesk9FTw3ssCAgu3PwrJv4REYpMKzdszuGlCd9v21XtWxnABDLIme9WxapM9AXZhWm+ftJTHbSSlHwDdJPHCulh05dLrJ63C3AtsnncyeMNl0nkMHqN51yB2cus6qeE4LL5zErK/f4fmp31HuzfAveR6zzZKJ+tXPvkg//mABaFhfMMHpvPo4oqU8wOyqKFZU6mDfA5DsYWgsMiU4kpePkaXbAUUxYw8N5CY/s7ic8+wT+lGWwO
    KEYCLOAK_CLIENT_SECRET: >-
      AgCzoTMzmpsYFVLLN1DrfuKVAZ6R3+8uNZtB5+RPUCrh1I0q3Z2YNxm0TBRWhD/N6h3ufCAvIXr8nkdbcK6THqmGTI+7Kt9hTiMA/yLKjj/XXK0ukREGJgk/DMoYUwFnntMlB8HhShlMppdNBz9VptimWouRTVRNyxYaYzDI3gZV9G3s/67byPX8idAjIvmQkapQobYnlFMKv1rpZhbJPmQc2TYp3OdR04GRZT3Je6AMyux+m8aHi3P20jXqQxp/3eVAvAXNqF5eG7qSw5re6+vSZWv0Z+g774rgK72ykdM7/Q2dwqElFAhuqq+W8hOZLCyNgPQbFEuiWto/C2yAi6khWSL3Zo6piiINlsIqNQ/TCNu/IvbzX6hNDydFJrG5ul0qUTNqNXl9Hx0UG5Y+Vgd7RQWlalW1IPYukzvWKGiK3UpB3f8RkcLhli3wAWHh9Ih+BWSbRNUFiWZmaIdbRYcdyZI4PycUkIZiS1nbznlyGQtns/ixoSPhxRd0ZhH0l1gLaMiYczWsL4ABAX9OMLVXXBVtNVQ1QVW45BAVAswqkppz3xPcZV46PUWs9k8oDcago+GRc08ExxBOKVrb36u8abIepZHpLarvSgOQ2oUfS5qv3rdDoSo8js0Ihh0ZSAMZrRcjAwK8R8a1O0h8feegfjq3avcZxisigpSSP2R6Pbdcy0iDI4ALPcymi9/1G2D22PXaaZhXmnL1FfAFc41A+hacWECUhiLuz/iQB3LzJA==
  template:
    metadata:
      annotations:
        sealedsecrets.bitnami.com/cluster-wide: 'true'
      name: app
    type: Opaque
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: 'true'
    kontinuous/chartPath: project
    kontinuous/source: project/templates/franceconnect.sealed.secret.yaml
    kapp.k14s.io/disable-original: ''
  name: franceconnect
  namespace: template-preprod
  labels:
    kontinuous/ref: master
    app.kubernetes.io/managed-by: kontinuous
    app.kubernetes.io/created-by: kontinuous
spec:
  encryptedData:
    FRANCE_CONNECT_CLIENT_ID: >-
      AgCbLEqJcxaUphThDCEtuwLv6tGCVWn5pGADStG7x+yx7w2OQ2Ucdr9srt7Zev5GH4RIu+t3WY/LEcNXkxnJWraPYPsON5iQ0zj8R2UJIpv/kmLixOTaeLxBODknpSoVSUehOKCHVtqggLCTVPAJNSJgR2cDebW3bH8w9uvAgX1fXu0weLIjm5q815iwbeQmkEXejkWuGYALfwa08YlexbMmTg/HDGNl7T843XGZjNbPO4rRwfjEAYkA30WxJ7hSxOhqZTDBJT/agWoxei5QvNykm/wU88pr6Ume7wmMGG/vizWfRweXkiGuWF687Nt1xq+SEAGK/GZuujHIp3VbHPI0CIfjU0NrTK4qpCp7bDl3rdvdzx6a5ubNjhv0Z3dwF+Y1UFyB5NIWkpJn8qxa060I5fFWbvw4xe7kJTufx8jVL7h8HQK1iCw2DEhx4M3L0KslpNby6OFSUINTdZhDbj9/l5tBMrxbtxsnubxbuUvCBSurI6iNUrEXu4pruaN4VautwkN1M1EHMtMxE+PzpoV61GMdGwZmrfZzOrLYYXdKaCAcRNAGOo156wapdk7QBNqK6GrbGbsaIJo0QruVebPS36rmgsc+0JDKYruIvcA94wkbzvScy0RwiSpfqBhcUHZXq2dCRhgrkJnFfXJbpKziVGcvQmMYPQEH78jJgzswdoK2tCZnxg4jXSJv6pn+2BWmAAMvMRXT3Zb+styCVkODPwcgvIcl6h9VgaTyc4Tu+kjKkHvQS6Age0/9M0W5Z9/4ngzJQNzDxl0PU+oGckiJ
    FRANCE_CONNECT_CLIENT_SECRET: >-
      AgAq5ZXB3fz9RjjI/bE0I92LcxwNTVih56O8n7xxoxzea10nsV+6Tu76vjE8znLw71QobQeLnuoI61WcSl1f0NBQwl5fIGDSRjCgSUAz1+2T4NF7Q1b9wqIsAsC4dvMMSiNF19P+4/galSbwxJ5qWVjmYt3iC3hBrgs1nuaFVDUlo1X9Qwi9eutFnjesZIcT4WnlU7onSlTQgmshUUfc2IBcgLYWftl35dhIvXKifka2tUTiCsJkLjfmOrKYtfOfw1a4MOCn74LMhzoZNAUFHwlJRZTw+PbAWFKz+Z/5wvEDB1pevU8j5Kdg6qgCwrExCsHFGxsg46Io6HChH0ktIWxaPV7U1Xx0h8VxOo2VgStQq1pWEy3hq3BVxiVGTgywhPtwWhJWWlFCcrnO7Za9nZtYmtM+DSUlbrGQdSK9Z1U5kpeJdLpNe72oPZ/hJ5Fl6i4kO6iH6xDnKfgjZpU1OeL9tpa5Dpujp+chQNFVI8+7nZY389Z53NxGEMMRWS42JH0N+yejtVZsHipfo9s/Y4TdaR7cjoKHnvHi+rVo8TI3NwwEvQBRmT2dHX1XXOz5O4hx30gy3XHqCYaX5i9evXexy5xRXL3lpQqfx3VmFf7eJEC/AJrvdMxwhDnzaq2lxjgRfx38ty5wKy+EFvsBFAf0hKtnmlwO0Vpz78Zuj5t+GeJ4exYHwUA7NVwOVzqbwwsZctM7kTNc99DxSg68MsSDsZcXiWhNL5J9PowD38fG/fXHiOpb3TxSSwVTIR7OzozZ3fYpRQ6gbgQiFOHnSZmk
  template:
    metadata:
      annotations:
        sealedsecrets.bitnami.com/cluster-wide: 'true'
      name: franceconnect
    type: Opaque
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: 'true'
    kontinuous/chartPath: project
    kontinuous/source: project/templates/hasura.sealed.secret.yaml
    kapp.k14s.io/disable-original: ''
  name: hasura
  namespace: template-preprod
  labels:
    kontinuous/ref: master
    app.kubernetes.io/managed-by: kontinuous
    app.kubernetes.io/created-by: kontinuous
spec:
  encryptedData:
    HASURA_GRAPHQL_ADMIN_SECRET: >-
      AgBt4ZhbUhFLU7DZocGxxVVZZsHB7nPbkoJiIAwiJRaxu+LgcV6EbR4dH80UqXJYurjEGybGmB5MzL9EWoRT/cfNTFxEpy7uo9t0A+wYp0LWc7ofv+bfrnFMtPtd0yMXFxAyMnq2kDtbSuiDJeAtvQhhnZYs6vWl7JxuzX9BNjdxIZW/t29LQPBEEjlO5fxbAbDq7DY0gfM9z5OnnnCbfIVDMN7hc7QThr1hihBgyd+oVJxRLJGUEvGA7p93N4kSSzv/nqv2OHwYiDHUpPW6jnkzd663CiOC80GdyPvwbGPro6TcWURj7HuJj+gSo7TFslrSg2a0UifQZGndpsmSzYCx38QzJaXKrqHYQGI/dokf7j8x+ObN5RhQck+eftBDeBOLW37euogdJiwNiN4mXM/YZc92e6MEhyfDFjFuiM0Zq8TqFqoO1rRJyuZWFfvE4puGLLqp+aQoMiLHJzTC3nly1ekoHHdVeaLAs6hI7Z6VPBgl/021CtXD/V2/EKQ0gApAD4uqPrxHs2VsiDJlhjOyc5f54zl9WfDBJCFT+tgia6jqWSOuiNE2iZzGzuAuvM13wQbRaYlR6SShb7XUkeEu8GX9PxWsOK1PLQjp2WZz2WT48i+eDEiAlgYDhf4D/KkT+uuIeoJQIGzJkmDPIKlPPvK440SJWYS4QC0O7ya3AMZBdKcXi53CpSt1YDV4H26WJ0b7DIiW5pQoeVEBnXg9UDnb
  template:
    metadata:
      annotations:
        sealedsecrets.bitnami.com/cluster-wide: 'true'
      name: hasura
    type: Opaque
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: 'true'
    kontinuous/chartPath: project
    kontinuous/source: project/templates/keycloak.sealed.secret.yaml
    kapp.k14s.io/disable-original: ''
  name: keycloak-secrets
  namespace: template-preprod
  labels:
    kontinuous/ref: master
    app.kubernetes.io/managed-by: kontinuous
    app.kubernetes.io/created-by: kontinuous
spec:
  encryptedData:
    KEYCLOAK_ADMIN: >-
      AgBWye/9Iav1llY6ZLWgL4to/75FMWvu21ploogsvNSQoig2vUxNO9e9wpfSf2I8CJDic0RStCI65nvBcJr7UhaV3WXvutbV2JBMgqF6VPGJh1BYu7UERzaBFdfYaV8foFJsLHW5RvPRGALhhiovvR2mjNgNtBdhyf6bmOss+lj/UxN66/vmdBu2PwCRmuyDCCnIbzQw/31KZjA2v9OZC4PLtFB6TTITsZmG6MN5fbz4QFk6TGXDPfYVuN3voFOn1uICcRsk2WY/4N3RYqlhF1vxO974rphuObnzwWOWzfg7dZRx0CdvtbGZsWG4LcMekUHO8mj4gFM1GmS0hkKfQnALattYtfo0Lo42FRFFRm4CSc07BkjW6a/JzEyeYDV+wcZtvcEhLG6UyF9m9eW12ukZyS3K7o/UH/8VR1Z+G65L8KlIpg9gjIXxGyX/cCSFRYt/OvWj5fjpstdAvgcHt4sTlMPaqQpeH3FflRb2VhhXhgBFaXYc0kjl1vDgSV/dCu1OhLcIg1Z4V+z1BAoPESd7syOC9OFxqFacIoK7Uz/vR7svkvFfJrm7Iamnf/CklwuO0BRZrL67Tf1anT4A/WCsFEd/Ha0j9PaxP8UptkfLkDPNICE1qbUkf/vFOQA6d7V2PC+HYkwLrpYnc0Y5ze8gTB4GlOUfQNXGZpaEI9EGguHA7YbAyIXHhyUyYBEeCptdd83u3gaff7RW6Avo/75qT/oiVgUX08eXqp8xo/DRCB/h6JKiAwbpgzADuA==
    KEYCLOAK_ADMIN_PASSWORD: >-
      AgBkcJ8Y/h6hIP6OKMl25ryKcL2WTqvRmu6U1wUMvSzI5r+ZJxaMpYNisGgSSDdQmkLGhkMeRmHxfWVSRNSUb5YJ6Aw9MQRHEHXmDDRN8iBuLlpG/uB+rpuILdyKz4z8lxFVUw4ZYd/sR4ge8E+HADVokmFVHPGg+ZDchz7AJ+4qmp/Ey/TRPl47U8xWfLj1P8TpyZCqFgceFoNGLo7OCzhgFAeaiTU0sP2jc1NR0QS0kWK+NhOHZ24AvkQnZo2kPTWY3kFLbh6uz8N7gYif55CIbZSEyfp+OZyfBGzn4xNRe7i004/vDFWhGnAQdaAFDhlc6fHzwIUWTcNUR6E/aA0wX/8HmLKncNQ8UO6UIYOvak0UMT2GnVMkRYaqw2QEKrODbuPwoAJjdrrDxA/s97ZwOSa5iysisa562IMk/dKT6/k4jEdNH0h0PpD4ZE+MYLa8nDNn6yMGeoO4p22U03UjQLzyjMvxWfFLkLTyMy6ct8Lxp++xqm9g58K29dSvXpSxCa1382RjA7ocOqpa4Qy1y4gzVBBvVZLeTXyywqSu4bc3+ZBiAWy1SDadNyin28/krRQ4F7gK7BgzT0cHXPC3xIdI52hsf5Cg9FAZwXd9xBpAMHdkIbrD7/3LvC7FbwjdkqUVX7pjEXfqX0qUHRWjrYcomuRxiBwb+qtWWiqgcMWBiBoddwfdSQudeNHY770LSLtWzNK7j9kFaSDofJPoHdaAO9gP6MpDh03BBpILfmg0YhGp6KrsJDwlHA==
  template:
    metadata:
      annotations:
        sealedsecrets.bitnami.com/cluster-wide: 'true'
      name: keycloak-secrets
    type: Opaque
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: 'true'
    kontinuous/chartPath: project
    kontinuous/source: project/templates/smtp.sealed.secret.yaml
    kapp.k14s.io/disable-original: ''
  name: smtp
  namespace: template-preprod
  labels:
    kontinuous/ref: master
    app.kubernetes.io/managed-by: kontinuous
    app.kubernetes.io/created-by: kontinuous
spec:
  encryptedData:
    SMTP_USER: >-
      AgCtNiTWL+F2ywZRtxhFDIvdGk+/qZk/gZChvX3zGc3FqyWmPD37lOldwWMdWsT3mHh8JabZQzuG4JbJEI63Gkm/BZhwwLE7ETgay/nyIOSagr0Y4gedwcfSrxj9CGWnPZ3V6vXFmMbhuLnW6nhngNkToN+3+ZjXrLm9DPwRP6LxEo/EToN06Ep7z/0/zCyq/ocAuoYRIari1jLbppAbxQdNqmCtM56V9EvMN1MWtoBtW16Eirgwf5Vk5283g4JbCdkkKDku577Jl4qHjThOLE6Oanxmf2DhjnXvxBgr15P4kWdoWlRf4CtS2JzbFAOeuEaxDiYZkd9SpqpKJdD+6ehC0nquO/R70KLoHBp0w+LEfmc3Qns5svfDm05yEimwc6oANLWH1HE50clORENlwr3yhskjQb2c7nR8UqkdqNN9CLWIhWVftSYVkKSOPsQUFwtFYNfXw0SQSi5H787XV4oMAwvpzE5+nWD4nrjkkAUrgZB/P1uXCM67vNKFvHacZyzRahVlDdZzXx7hlwG9EFY3WNzFsNqDIvqIVDjU/QfxXityKIMNc8WU/20P9J0rrTjN70UoBnO1jy1nuAV9tga3yULiikUoVKyErlOPZji1c40dCuQa0NFOzhpoWWdk85sCYDoWSsALRqYJJqufUDTldWBeZuBgmGEwYstMY2uNNbvyPhA5yb112l0YHTD8uPhHmwfqB+9kwQFoyTf44oF9bnyOWY1L/tU7ZzR/j+dyRA==
    SMTP_PASSWORD: >-
      AgAldT2Lys9V5J8O4Z8E45ke0BPrNNBWJ0ALBVQwpFZBjXiqhaTEPmoebUpYG5GLdKyjbP4Qy7SATESmRGvX9LOq85ylErpRjF4X1PaLHczkFGApJBcBdtdRF8c6vw+AS2hXfOMsY8a/hpx+CvBpUhFt9M9r4qRyuaUpi7Hn3w1kcr7mKxt4dPCJR4dY2Dz6PkO3k+1VPWR9FdNknaYmy+PuvMsQugIzisZlVf7X7vLb8bUAlEPooxUG96Px2EzVYv7G391f5l8/WMnrbjfsjnrBbs/Tp2+QRtsyu4f6KdyPvJkItkrR2Xizrdu1D93uMg8C30cBWZAP/0Tx2dh7glMR2ba3PEY0Q7F+ZK1Or1PScmcD6DpRCHXxbBCx619b9dhJMuslTFrMDf+macf5G8H/qsJUvugQnYEAsEBCw/rwO+BSyBSiyV3H+kgz9Sy2Y//nymZP66BD3bctZ/tjnkmqbPXgpU7NnZaKSe6uFkIp5OHzDZdUko545JThxNbjnD+Mc+LxhB2V+VkmQKHrrDWAEz3zQ1xxOMFp5CGjLQDYLG7Qcahm9DRINgcEp/lo2ghJXHNEH+JhulLoJn3KnldKQzg9uYw6uGs8FzhjS7j2jS0yVKQNl0Uy8ayWG1YLA3CldjkVTKqJqyyCB5WpGhuXLa26RhiwEYpkQZCPPxh44kyQgOQlhNVkuMtpJGSkkL5RrnqgWwsiBtdqciZmJoD7UTEFyWiWD+lDWB/xhAUsWg==
    SMTP_HOST: >-
      AgAeDmXALosJO6zUJfFS368NcULX6QycNtLQbsXwSYGKk3J7VHdTgd55XJCRCDafsgSu3nLltSUPnAm4g9ck/bvVTwLFCc8FqYsxtE4mMn9RX5ZTYzaoWTGK/UiY2Vm7fg5QdiaLrQ6TxRT75RXd2NYL1CHp2grsZGihBnIOfPkc/Ma98dkaapPOjfvW58NNbdLh18eCVMP0xTCR1DHpiygIDZ0/H5wASQZEDxmpWpbJEj4eFTK9qNQwFbYL7kQJ8VGzrcLIkgkrUgeiRhVDt8nBDKG44FT+o9hBBX3yEzRM4oTmOoji8iU1OU5o9/XT+MMnD14SCSmLRyJohxtad7UFObCiYktsAy5UHM2Q2Ec2SERXbCYwiwNqDPX7Svlz8X2loVZNRQ8MPYAzvo+rwVRKH+R1X6djqw0VVdwaq//A73iWrTyd+PYUWUOtzerEtLLRdEtey/Jt1w1kwVQKpe4awLad3zdyr3sEm5/i1RKtKdB5vEj0bCZpCqdHYcOrjLvyF3bKb6mKClhuaRqWAce5LgpnMsJOU2PRgaoiolaJxzOs8/d2yDGUND+jdMDluOaG/OqfwtTS/S8WmiaMYLAkypGCk1SvjLXZmGnLkCT7vpdMskIO2YzjSZHTbHk78R+L3Zp+Z0R1F2AG0Sa2rYHcUf1wyeGiS8YVPer9YJDP5fyiFpQN8YiZLFamAGiM/TS7neNvXhobwM/4wyc8gjjKpQ==
    SMTP_PORT: >-
      AgBtKRelkMjrFkfvsQZjYBK+51a3gz1PEopnHf3JNtWAiVRpIG6ktCFFE+0zQFb83FTpgpsXdttfZ+qnmEGJUchyAj0NqEbERkLgSz0chOPp7Ov3aI/iMiS1e9Z6GnGP6j9npUPWzkTS2VJBTIFCqWNMYI2x9viX7TeKXAs7G5EtaWWHv1bxTdv8gfLao7GkFcfjl1WWlN1jbYDbAyp40LfJ/VamwoYW8PNjn2O3XhXfEJGn5261zlvDvCgtzizWHafWCXH5Y0GCAh5ryDc6V6Yop21QGlARdg0Aoj6Fm6gryNzf2JGHBppYQHYTpx2dtJbH2DTxfc5R2uuozIboiYsbTZmeKXy5HXzWO/feUMVk33nPErX7qZZp5ydOXK2qI6225oIrEsZDPYfBGiQwyk/iYSLW9NNW4bNDW6+4GlYuR5MwOzjUmerguIV0Xvt8jnHF4Ak/DZ1P/qa9GvvzNWh4VIo27c5hEGt8Tn9zhqDs6xEv120kyQyYK42HXCvzgnYBo7KJViKigSUiT5GiaDL1wQXVvnfi38AW04Uy/3I9Uyb5N/Ij1yObrtk+sYcFIS2g9njmfDYkhfg8UAfc5AjK+VUtJCZ8i3xhRX/gNO4W0/EUU6gsn0vh9D9HwuhO+u/gsQlslKuJpiO7fS03bIgGGE820InTaoJgPKVelr9vztOvNMWVOZSzd1Z6cqLWuva08Ns=
    SMTP_FROM: >-
      AgCrI5KJy3W+jd1pa0oIX9JoHIGFJqvqMHzh4WnTFW5gT6Sket0ur0ocWWop+FQwwZvEfxtRBnITVYOiqmx9WWk5NQyX61bj+JYcv83m29vdUyG2E7JNvX3jUY/KGOnd/yrrG5xLGZXjYOCwAXn+diSmaeMD2K4NW75hrECUf4ljrqFz2tZCSQ6i7YrwO5SnhcspRydJzS+tm5WXKyP/NiE6tF44L8FlNVYXv8c5+Mg4irnE5lVOtZfix8rt0lWr45uUxPdOsHN8WOUiJCRKL+SHlsMWR0eJC/wzf9SCCiB6UZc1nmOz4IBFYMYjALfZ78P/71Vy6j/TGs07Nf2fCn6EyU/hT1yhVRYRqmx3fpqKFUjmtmMNdHo0Dt3hlBj15Y5EFg7VQRziN7oswVzFKzCRWSUu1Z29NgnCUxtDJuFpXpv/m4EyR8KS/0AcPYX7UiqKiJpFe2O/6PCpcDPBB5PgaWOgeoaaVagvxoSGe0EuRDsf0i7CbkHb4hMgz1nrLWwHzRzm5hDnrmEiqjMfJ9gURpunLDKG+nnKB5IcvwWELVhlzvQv7LC9RPNAQlPkcmYNokZeP43dQjB1y/94m+tMm7HdZyeFr5wQvzqONi0U6QnFDhVke0o/FhoWAyMm+UCWS/7rw6TMaSOmWHURIj/dKXlxRtwvmSYp7NcCW4nHaJbQKt260pWrIDm3AhEG4fOhCbvmnk4ccYBXCV31byXEwWSfkzmEsJ3VPatp0p8O
    SMTP_SSL: >-
      AgDJiC/Ji50KcRv64cvKmln1vqIAz5Zt3f3/9S+eEGZQD8fznYIp0JKSsitTXeoHNP268g+AKH+TuEr8y6H2pB/rfv3bwjjxc1cECOkPzg/Vn9AaSpMC/j2mfEi8Zsvuc6NlK2PxtFj9CETRBD7iMbOhQvegmeEcfGEoW4pVe3Xygm22Z3wbrstkDtpcn/oO6f24CfZU0RLmjqi4RPsBXiDSjruJt9gi5tmV7vR1OVzNx0dns/u3uPbwwYPGWTUnJahXiOdVNMm6Ul3HgjygvPra+SUyj2rkZQ80snMB6E2zTZaC7Oqrk1kIOlPv0XTr9Zzk+Z4ZyXocCa3DsNNaMmiVtQ9e3m7YFfonr9yND3BBgs0xtsuGx+TU7gzxeCyFpeHeKfXFYR+RY+eO0CO5uXrFEcblBPRuUW77toGwaRCdrXpj/2TlQmXhROQn/KcLWxj3e1sksjw8i7LlccP34Lo17GWXReMReyLT/B7rfmfgj7bewCdN6b72K73nVCeUosYTm3Dx3/OCHhQURbYuELb5ayXypLklEvFCk+pEjzjWS7Z/5o6qLd1gFFRgH5kZ0LyRtNvc2T9RF+LudyNySFny9qSTIGSLnv2IUXvfFQJ1Pk0JGI00oimEjrv1VxEPWqLEgSkONxmVwomVggubrpc5s2StoorwmFtbaCYOmdFozzVA3wl/imKZp5UnTdgbWuGcg1tdfg==
  template:
    metadata:
      annotations:
        sealedsecrets.bitnami.com/cluster-wide: 'true'
      name: smtp
    type: Opaque
