global:
  registry: harbor.fabrique.social.gouv.fr

app-front:
  needs: [build-app]
  imageProject: fabrique
  imageRepository: template
  imagePackage: app
  containerPort: 8080
  probesPath: "/healthz"
  envFrom:
    - configMapRef:
        name: app
    - secretRef:
        name: app

jobs:
  runs:
    build-app:
      use: SocialGouv/kontinuous/plugins/fabrique/jobs/build@v1
      with:
        imageProject: fabrique
        imageRepository: template
        imagePackage: app
        registrySecretRefName: harbor
        buildArgs:
          GITHUB_SHA: "{{ $.Values.global.sha }}"

keycloak:
  enabled: true

  serviceAccount:
    create: false

  database:
    vendor: postgres

  # postgresql:
  #   enabled: false

  statefulsetAnnotations:
    kapp.k14s.io/nonce: ""
    kapp.k14s.io/update-strategy: fallback-on-replace
    kapp.k14s.io/change-group: "kontinuous/keycloak.{{ .Values.global.namespace }}"
    kapp.k14s.io/disable-original: ""
    kapp.k14s.io/create-strategy: fallback-on-update

  extraEnvFrom: |
    - secretRef:
        name: pg-user-keycloak
    - secretRef:
        name: keycloak-secrets
  extraEnv: |
    - name: KEYCLOAK_IMPORT
      value: /realm/realm.json
    - name: PROXY_ADDRESS_FORWARDING
      value: "true"
    - name: DB_VENDOR
      value: postgres
    - name: DB_ADDR
      value: "$(PGHOST)"
    - name: DB_PORT
      value: "$(PGPORT)"
    - name: DB_DATABASE
      value: "$(PGDATABASE)"
    - name: DB_USER
      value: "$(PGUSER)"
    - name: DB_PASSWORD
      value: "$(PGPASSWORD)"
    - name: JAVA_OPTS
      value: >-
        -Dkeycloak.profile=preview

  extraVolumes: |
    - name: keycloak-realm-tpl
      configMap:
        name: keycloak-realm
    - name: keycloak-realm
      emptyDir: {}
    - name: extensions
      emptyDir: {}
  extraVolumeMounts: |
    - name: keycloak-realm
      mountPath: "/realm/"
      readOnly: true
    - name: extensions
      mountPath: "/opt/jboss/keycloak/standalone/deployments"
  extraInitContainers: |
    - name: compile-realm
      image: hairyhenderson/gomplate:v3.10.0-alpine
      imagePullPolicy: IfNotPresent
      volumeMounts:
      - name: keycloak-realm-tpl
        mountPath: "/realm-tpl/"
        readOnly: true
      - name: keycloak-realm
        mountPath: "/realm/"
      envFrom:
      - configMapRef:
          name: app
      - secretRef:
          name: app
      - secretRef:
          name: franceconnect
      - secretRef:
          name: smtp
      command:
        - sh
      args:
        - -c
        - "cat /realm-tpl/realm.json.envtpl | gomplate > /realm/realm.json"
    - name: fetch-keycloak-extensions
      image: curlimages/curl
      imagePullPolicy: IfNotPresent
      command:
        - sh
      args:
        - -c
        - curl -L -f -S -o /extensions/keycloak-dsfr-latest.jar https://github.com/SocialGouv/keycloak-dsfr/releases/latest/download/keycloak-theme.jar -o /extensions/keycloak-franceconnect-4.1.0.jar https://github.com/InseeFr/Keycloak-FranceConnect/releases/download/4.1.0/keycloak-franceconnect-4.1.0.jar
      volumeMounts:
        - name: extensions
          mountPath: /extensions

  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
      kubernetes.io/ingress.class: nginx
    tls:
      - hosts:
          - "keycloak-{{ .Values.global.host }}"
        secretName: wildcard-crt
    rules:
      - host: "keycloak-{{ .Values.global.host }}"
        paths:
          - path: /
            pathType: Prefix
